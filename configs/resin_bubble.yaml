# For documentation and additional parameters, see
# https://github.com/facebookresearch/detectron2/blob/master/detectron2/config/defaults.py
_BASE_: "mask_rcnn_R_50_C4_3x.yaml"
VERSION: 2
DATASETS:
  TEST: []
  TRAIN:
  - resin/train
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.80
    - 0.80
    TYPE: relative
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 10000
  MAX_SIZE_TRAIN: 10000
  MIN_SIZE_TEST: 0  # Disable resizing
  MIN_SIZE_TRAIN: (0,)  # Disable resizing
MODEL:
  ANCHOR_GENERATOR:
    SIZES:
    - - 16
      - 32
      - 64
      - 128
      - 256
  DEVICE: cuda
  PIXEL_MEAN:
  - 0
  - 0
  - 0
  ROI_HEADS:
    NUM_CLASSES: 1
    SCORE_THRESH_TEST: 0.05
  #  See https://github.com/facebookresearch/detectron2/blob/master/MODEL_ZOO.md
  WEIGHTS: "detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_C4_3x/137849525/model_final_4ce675.pkl"
SEED: -1
SOLVER:
  # IMPORTANT: This parameter is interpreted differently in the resin script (compared to detectron2).
  # In detectron2, IMS_PER_BATCH is the total number of images per batch. This number is divided by the number of GPUs.
  # In resin, IMS_PER_BATCH is the number of images per GPU.
  IMS_PER_BATCH: 1

  LR_SCHEDULER_NAME: "WarmupMultiStepLR"
  BASE_LR: 0.01
  MOMENTUM: 0.9
  CHECKPOINT_PERIOD: 1000000

  GAMMA: 0.5
# The iteration number to decrease learning rate by GAMMA.
  STEPS:
    - 1500
    - 4000
    - 6000

  WARMUP_FACTOR: 0.0001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: "linear"

TEST:
  DETECTIONS_PER_IMAGE: 2000
